import{_ as e,c as i,o as s,ae as t}from"./chunks/framework.cCdmFsMI.js";const c=JSON.parse('{"title":"Your First Apollo Project","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/first-project.md","filePath":"tutorials/first-project.md"}'),l={name:"tutorials/first-project.md"};function r(n,a,o,p,h,k){return s(),i("div",null,a[0]||(a[0]=[t(`<h1 id="your-first-apollo-project" tabindex="-1">Your First Apollo Project <a class="header-anchor" href="#your-first-apollo-project" aria-label="Permalink to &quot;Your First Apollo Project&quot;">​</a></h1><p>This tutorial will guide you through creating and compiling your first Racket program with Apollo.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Apollo compiler installed (see <a href="./../tutorials/installation.html">Installation</a>)</li><li>Basic understanding of Racket syntax</li><li>A text editor</li></ul><h2 id="step-1-create-a-simple-racket-program" tabindex="-1">Step 1: Create a Simple Racket Program <a class="header-anchor" href="#step-1-create-a-simple-racket-program" aria-label="Permalink to &quot;Step 1: Create a Simple Racket Program&quot;">​</a></h2><p>Create a new file called <code>hello.rkt</code> with the following content:</p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> racket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">greet</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">~a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(greet </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;World&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="step-2-compile-with-apollo" tabindex="-1">Step 2: Compile with Apollo <a class="header-anchor" href="#step-2-compile-with-apollo" aria-label="Permalink to &quot;Step 2: Compile with Apollo&quot;">​</a></h2><p>Run the Apollo compiler on your Racket file:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apollo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.rkt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.luau</span></span></code></pre></div><p>This will generate a Luau file named <code>hello.luau</code>.</p><h2 id="step-3-run-the-generated-luau-code" tabindex="-1">Step 3: Run the Generated Luau Code <a class="header-anchor" href="#step-3-run-the-generated-luau-code" aria-label="Permalink to &quot;Step 3: Run the Generated Luau Code&quot;">​</a></h2><p>You can now use the generated Luau code in your Roblox project or test it in a Luau environment.</p><h2 id="what-s-next" tabindex="-1">What&#39;s Next? <a class="header-anchor" href="#what-s-next" aria-label="Permalink to &quot;What&#39;s Next?&quot;">​</a></h2><ul><li>Learn about <a href="./../explanation/type-system.html">Apollo&#39;s type system</a></li><li>See more <a href="./../tutorials/examples.html">examples</a></li><li>Check out the <a href="./../reference/cli.html">CLI reference</a> for more compiler options</li></ul>`,15)]))}const u=e(l,[["render",r]]);export{c as __pageData,u as default};
