import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.cCdmFsMI.js";const c=JSON.parse('{"title":"Macro Reference","description":"","frontmatter":{},"headers":[],"relativePath":"reference/macros.md","filePath":"reference/macros.md"}'),n={name:"reference/macros.md"};function l(h,s,p,r,k,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="macro-reference" tabindex="-1">Macro Reference <a class="header-anchor" href="#macro-reference" aria-label="Permalink to &quot;Macro Reference&quot;">​</a></h1><p>This document provides a reference for Racket macros supported by Apollo.</p><h2 id="syntax-rules" tabindex="-1">Syntax Rules <a class="header-anchor" href="#syntax-rules" aria-label="Permalink to &quot;Syntax Rules&quot;">​</a></h2><h3 id="define-syntax-rule" tabindex="-1">define-syntax-rule <a class="header-anchor" href="#define-syntax-rule" aria-label="Permalink to &quot;define-syntax-rule&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">define-syntax-rule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (pattern) template)</span></span></code></pre></div><p><strong>Example:</strong></p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">define-syntax-rule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (twice expr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expr expr))</span></span></code></pre></div><h2 id="pattern-matching" tabindex="-1">Pattern Matching <a class="header-anchor" href="#pattern-matching" aria-label="Permalink to &quot;Pattern Matching&quot;">​</a></h2><h3 id="syntax-case" tabindex="-1">syntax-case <a class="header-anchor" href="#syntax-case" aria-label="Permalink to &quot;syntax-case&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define-syntax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> stx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">syntax-case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stx ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [pattern template]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><strong>Example:</strong></p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define-syntax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">match-let</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> stx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">syntax-case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stx ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([pat expr] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) body </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     #&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([tmp expr] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">match-let*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([pat tmp] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           body </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))]))</span></span></code></pre></div><h2 id="special-forms" tabindex="-1">Special Forms <a class="header-anchor" href="#special-forms" aria-label="Permalink to &quot;Special Forms&quot;">​</a></h2><h3 id="begin" tabindex="-1">begin <a class="header-anchor" href="#begin" aria-label="Permalink to &quot;begin&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expr </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="let" tabindex="-1">let <a class="header-anchor" href="#let" aria-label="Permalink to &quot;let&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([id expr] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) body </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="if" tabindex="-1">if <a class="header-anchor" href="#if" aria-label="Permalink to &quot;if&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test-expr then-expr else-expr)</span></span></code></pre></div><h2 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;Limitations&quot;">​</a></h2><ol><li><p><strong>Supported Features</strong></p><ul><li>Basic syntax rules</li><li>Pattern matching</li><li>Special forms</li><li>Hygiene</li></ul></li><li><p><strong>Unsupported Features</strong></p><ul><li>Complex macro transformers</li><li>Some advanced pattern matching</li><li>Certain special forms</li></ul></li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><p><strong>Keep it Simple</strong></p><ul><li>Use simple patterns when possible</li><li>Avoid complex macro nesting</li><li>Document macro behavior</li></ul></li><li><p><strong>Error Handling</strong></p><ul><li>Provide clear error messages</li><li>Use contracts when possible</li><li>Test thoroughly</li></ul></li></ol><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./../how-to/macros.html">Using Macros</a></li><li><a href="./../tutorials/advanced-macros.html">Advanced Patterns</a></li></ul>`,25)]))}const E=a(n,[["render",l]]);export{c as __pageData,E as default};
