import{_ as a,c as i,o as e,ae as n}from"./chunks/framework.cCdmFsMI.js";const c=JSON.parse('{"title":"Using Apollo with Roblox","description":"","frontmatter":{},"headers":[],"relativePath":"how-to/roblox.md","filePath":"how-to/roblox.md"}'),t={name:"how-to/roblox.md"};function l(p,s,h,r,o,k){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="using-apollo-with-roblox" tabindex="-1">Using Apollo with Roblox <a class="header-anchor" href="#using-apollo-with-roblox" aria-label="Permalink to &quot;Using Apollo with Roblox&quot;">​</a></h1><p>This guide explains how to use Apollo-compiled code in Roblox projects.</p><h2 id="basic-setup" tabindex="-1">Basic Setup <a class="header-anchor" href="#basic-setup" aria-label="Permalink to &quot;Basic Setup&quot;">​</a></h2><h3 id="_1-project-structure" tabindex="-1">1. Project Structure <a class="header-anchor" href="#_1-project-structure" aria-label="Permalink to &quot;1. Project Structure&quot;">​</a></h3><p>Organize your project like this:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project/</span></span>
<span class="line"><span>├── src/</span></span>
<span class="line"><span>│   ├── game/</span></span>
<span class="line"><span>│   │   └── main.rkt    # Main game logic</span></span>
<span class="line"><span>│   └── ui/</span></span>
<span class="line"><span>│       └── components.rkt  # UI components</span></span>
<span class="line"><span>├── out/</span></span>
<span class="line"><span>│   └── game.luau       # Compiled output</span></span>
<span class="line"><span>└── apollo.config.json  # Compiler configuration</span></span></code></pre></div><h3 id="_2-compilation" tabindex="-1">2. Compilation <a class="header-anchor" href="#_2-compilation" aria-label="Permalink to &quot;2. Compilation&quot;">​</a></h3><p>Compile your Racket code for Roblox:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apollo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/game/main.rkt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out/game.luau</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> roblox</span></span></code></pre></div><h3 id="_3-integration" tabindex="-1">3. Integration <a class="header-anchor" href="#_3-integration" aria-label="Permalink to &quot;3. Integration&quot;">​</a></h3><p>Add the compiled code to Roblox:</p><ol><li>Create a new ModuleScript in Roblox Studio</li><li>Paste the compiled Luau code</li><li>Require the module in your game scripts</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="_1-type-safety" tabindex="-1">1. Type Safety <a class="header-anchor" href="#_1-type-safety" aria-label="Permalink to &quot;1. Type Safety&quot;">​</a></h3><p>Use typed/racket for critical game logic:</p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typed/racket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(: update-player-position (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Player Number Number Void))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update-player-position</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> player</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> x</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (set-Player-x! player x)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (set-Player-y! player y))</span></span></code></pre></div><h3 id="_2-event-handling" tabindex="-1">2. Event Handling <a class="header-anchor" href="#_2-event-handling" aria-label="Permalink to &quot;2. Event Handling&quot;">​</a></h3><p>Handle Roblox events in Racket:</p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on-player-joined</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Player </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">~a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> joined the game</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Player-name player))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (setup-player player))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Compiles to:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">local function onPlayerJoined(player)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    print(string.format(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Player %s joined the game&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> player.Name))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    setupPlayer(player)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">game.Players.PlayerAdded:Connect(onPlayerJoined)</span></span></code></pre></div><h3 id="_3-performance" tabindex="-1">3. Performance <a class="header-anchor" href="#_3-performance" aria-label="Permalink to &quot;3. Performance&quot;">​</a></h3><p>Optimize for Roblox&#39;s environment:</p><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typed/racket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(: fast-update (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Vectorof Number) Void))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fast-update</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> positions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([pos (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in-vector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> positions)])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (update-object pos)))</span></span></code></pre></div><h2 id="common-patterns" tabindex="-1">Common Patterns <a class="header-anchor" href="#common-patterns" aria-label="Permalink to &quot;Common Patterns&quot;">​</a></h2><h3 id="_1-game-state-management" tabindex="-1">1. Game State Management <a class="header-anchor" href="#_1-game-state-management" aria-label="Permalink to &quot;1. Game State Management&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GameState</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ([players : (HashTable String Player)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [objects : (Vectorof GameObject)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [score : Integer]))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update-game-state</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([(id player) (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in-hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (GameState-players state))])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (update-player player)))</span></span></code></pre></div><h3 id="_2-ui-components" tabindex="-1">2. UI Components <a class="header-anchor" href="#_2-ui-components" aria-label="Permalink to &quot;2. UI Components&quot;">​</a></h3><div class="language-racket vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">racket</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UIElement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ([name : String]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [position : (Vector Number Number)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   [visible : Boolean]))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">define</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create-button</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> text</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (UIElement text position </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h3><ol><li><p><strong>Type Mismatches</strong></p><ul><li>Use explicit type annotations</li><li>Check Roblox API types</li><li>Use contracts for runtime checking</li></ul></li><li><p><strong>Performance Issues</strong></p><ul><li>Profile your code</li><li>Use appropriate data structures</li><li>Minimize table creation</li></ul></li><li><p><strong>Memory Usage</strong></p><ul><li>Avoid creating unnecessary objects</li><li>Use object pooling where appropriate</li><li>Monitor garbage collection</li></ul></li></ol><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./../tutorials/advanced.html#performance-optimization">Performance Optimization</a></li><li><a href="./../explanation/type-system.html">Type System</a></li><li><a href="./../reference/errors.html">Error Messages</a></li></ul>`,32)]))}const E=a(t,[["render",l]]);export{c as __pageData,E as default};
